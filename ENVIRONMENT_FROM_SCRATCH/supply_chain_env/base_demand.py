import json
 
BASE_DEMAND = {
    1: 20,
    2: [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        19,
        21,
        23,
        24,
        26,
        27,
        29,
        31,
        32,
        34,
        35,
        37,
        39,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
    ],
    3: [
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        40,
        38,
        36,
        34,
        32,
        30,
        28,
        26,
        24,
        22,
        20,
        18,
        16,
        14,
        12,
        10,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
    ],
    4: [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        13,
        16,
        19,
        22,
        25,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        55,
        58,
        61,
        64,
        67,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        77,
        78,
        78,
        79,
        79,
        79,
        79,
        79,
        79,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
    ],
    5: [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        13,
        16,
        19,
        22,
        25,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        55,
        58,
        61,
        64,
        67,
        69,
        70,
        72,
        73,
        74,
        75,
        76,
        77,
        77,
        78,
        78,
        79,
        79,
        79,
        79,
        79,
        79,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        79,
        79,
        79,
        79,
        79,
        79,
        78,
        78,
        77,
        77,
        76,
        75,
        74,
        73,
        72,
        70,
        69,
        67,
        64,
        61,
        58,
        55,
        52,
        48,
        44,
        40,
        36,
        32,
        28,
        25,
        22,
        19,
        16,
        13,
        11,
        10,
        8,
        7,
        6,
        5,
        4,
        3,
        3,
        2,
        2,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ],
}
 
 
def get_base_config(sequence_idx: int) -> dict:
    if sequence_idx not in BASE_DEMAND:
        raise ValueError(
            f"Sequence index {sequence_idx} not found. Valid indices are {BASE_DEMAND.keys()}"
        )
    
    with open(r'C:\Users\mprivitera\Documents\GitHub\rewardshaping\ENVIRONMENT_FROM_SCRATCH\supply_chain_env\config.json', "r") as f:
        config_dict = json.load(f)
 
    config_dict["demand_fn"] = "uniform"
    config_dict["demand_fn_args"] = {
        "base": BASE_DEMAND[sequence_idx],
        "low": 0.85,
        "high": 1.15,
    }
 
    config_dict["forecast_fn"] = "uniform"
    config_dict["forecast_fn_args"] = {
        "base": BASE_DEMAND[sequence_idx]
        if type(BASE_DEMAND[sequence_idx]) == list
        else BASE_DEMAND[sequence_idx],
        "low": 1.0,
        "high": 1.0,
    }
 
    return config_dict

